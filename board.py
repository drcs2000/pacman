import pygame
import copy


class Board:
    def __init__(self, tela):
        self.gameBoard = [
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 6, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 6, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3,
                3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3,
                3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 3,
                2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 1, 3, 3,
                1, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 1, 3, 3,
                1, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3,
                3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 4, 4, 4, 4,
                4, 4, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 4, 4, 4, 4,
                4, 4, 3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 4, 4, 4, 4,
                4, 4, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3,
                3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 1, 1, 1, 1, 1,
                1, 1, 1, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3,
                3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3,
                3, 3, 3, 1, 3, 3, 2, 3, 3, 3, 3, 3, 3],
            [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 3],
            [3, 6, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1,
                2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 6, 3],
            [3, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3,
                3, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 3, 3],
            [3, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3,
                3, 3, 3, 2, 3, 3, 2, 3, 3, 2, 3, 3, 3],
            [3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 3, 3,
                2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3],
            [3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3],
            [3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3],
            [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        ]
        self.tela = tela  # Armazena a tela de jogo


# Configurações de sprite e tamanho
spriteRatio = 3/2
pixel = 25  # Tamanho de cada unidade quadrada
spriteOffset = pixel * (1 - spriteRatio) * (1/2)

# Crie a tela primeiro
# As dimensões da tela são calculadas com base no tamanho do gameBoard
# Instancia temporariamente o Board para acessar o gameBoard
dummy_board = Board(None)
tela = pygame.display.set_mode((len(dummy_board.gameBoard[0]) * pixel, len(
    dummy_board.gameBoard) * pixel))  # Dimensões da tela do jogo
pygame.display.flip()

# Agora crie o tabuleiro passando a tela real para ele
board = Board(tela)
gameBoard = copy.deepcopy(board.gameBoard)

musicaTocando = 0  # 0: Chomp, 1: Importante, 2: Sirene
